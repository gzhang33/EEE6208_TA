// MathJax配置
window.MathJax = {
    tex: {
        inlineMath: [['$', '$'], ['\\(', '\\)']],
        displayMath: [['$$', '$$'], ['\\[', '\\]']],
        processEscapes: true,
        processEnvironments: true,
        packages: ['base', 'ams', 'noerrors', 'noundefined']
    },
    options: {
        ignoreHtmlClass: 'tex2jax_ignore',
        processHtmlClass: 'tex2jax_process',
        enableMenu: false,
        menuOptions: {
            settings: {
                texHints: true,
                semantics: false,
                zoom: 'NoZoom'
            }
        }
    },
    startup: {
        ready: () => {
            console.log('MathJax is loaded, but not yet initialized');
            window.MathJax.startup.defaultReady();
            console.log('MathJax is initialized');
        },
        pageReady: () => {
            console.log('MathJax page is ready');
            return window.MathJax.startup.defaultPageReady();
        }
    }
};

// 语言数据
const languageData = {
    en: {
        sidebarHeader: "Digital & Analogue TA",
        mainTitle: "Digital & Analogue<br/>TA Review",
        languageBtn: "中文",
        analogueElectronics: "Analogue Electronics",
        digitalElectronics: "Digital Electronics",
        mosfetOperatingStates: "MOSFET Operating States & Output Voltage Swing",
        mosfetStates: "MOSFET has three basic operating states:",
        offState: "Off State - Like a turned-off switch, no current flows",
        linearState: "Linear State - Like an adjustable resistor, current controlled by gate voltage",
        saturationState: "Saturation State - Like a stable current source, provides fixed current",
        note: "Note",
        channelLengthModulation: "Channel Length Modulation Effect",
        channelLengthDesc: "Causes current to increase slightly when drain voltage increases.",
        outputVoltageSwing: "Output Voltage Swing",
        outputVoltageDesc: "Defined as the maximum voltage range when all transistors maintain saturation region operation:",
        upperLimit: "Upper Limit (Vout,max)",
        upperLimitDesc: "Limited by PMOS load transistor entering triode region, approximately VDD−∣VOV,load∣",
        lowerLimit: "Lower Limit (Vout,min)",
        lowerLimitDesc: "Limited by NMOS pair or tail current source transistor entering triode region, approximately VOV,input+VOV,tail",
        basicPrinciples: "Basic Principles of Differential Amplifiers",
        differentialMode: "Differential Mode (A_dm)",
        differentialModeWork: "Working Principle",
        differentialModeWorkDesc: "The common source point of the two transistors in a differential amplifier can be regarded as a 'virtual ground' because the circuit is symmetrical.",
        simplifiedAnalysis: "Simplified Analysis Method",
        simplifiedAnalysisDesc: "We can analyze only half of the circuit, treating it as a simple common-source amplifier for easier calculation.",
        amplificationCapability: "Amplification Capability",
        singleEndedOutput: "Single-ended Output Gain",
        singleEndedOutputDesc: "When we look at only one output, this is called 'single-ended output gain'.",
        differentialOutput: "Differential Output Gain",
        differentialOutputDesc: "When we look at the voltage difference between two outputs, this is called 'differential output gain'. Typically, differential output gain is twice the single-ended output gain.",
        commonMode: "Common Mode (A_cm)",
        commonModeWork: "Working Principle",
        commonModeWorkDesc: "When both inputs receive the same signal (common mode signal), the tail current source resistance plays an important role. This resistance produces negative feedback effect, helping to suppress common mode signals.",
        suppressionEffect: "Suppression Effect",
        suppressionEffectDesc: "The amplifier greatly attenuates common mode signals, which is exactly the effect we want.",
        differentialOutputPerformance: "Performance in Differential Output",
        differentialOutputPerformanceDesc: "When we look at the difference between two outputs, ideally the common mode signal is completely eliminated (gain is zero). This is because common mode signals produce identical changes at both ends.",
        cmrr: "Common Mode Rejection Ratio (CMRR)",
        cmrrMeaning: "Meaning",
        cmrrMeaningDesc: "CMRR is used to measure the quality of an amplifier, indicating the ratio of the amplifier's ability to amplify useful signals (differential signals) to suppress interference signals (common mode signals).",
        cmrrPerformance: "Performance Indicator",
        cmrrPerformanceDesc: "The larger the CMRR, the better the performance. Especially in differential output, because common mode signals are completely suppressed, theoretically CMRR can reach infinity.",
        keyTransistors: "Role of Two Key Transistors in Amplifier",
        m1Work: "M1's Work: Signal Amplifier",
        m1WorkDesc: "M1 is responsible for receiving and amplifying input signals. It acts like a voltage-controlled switch, regulating current magnitude based on input voltage changes. M1's transconductance (gm1) determines how much current change it can convert from small voltage changes.",
        m3Work: "M3's Work: Current Converter",
        m3WorkDesc: "M3's task is to convert current changes produced by M1 into voltage changes. Its gate voltage is fixed, mainly providing a large output resistance. This large resistance helps us obtain larger output voltage signals.",
        millerEffect: "Miller Effect",
        millerEffectDesc: "In inverting amplifiers, the input-output capacitance (such as Cgd in CS amplifiers) appears as a larger capacitance at the input Cin,Miller=Cf(1−Av), because Av is a large negative number.",
        inputPole: "Input Pole",
        inputPoleDesc: "Amplifier frequency response is limited by poles formed by RC networks, frequency fp=1/(2πR_totalC_total).",
        csAmplifier: "Common Source (CS) Amplifier",
        csAmplifierDesc: "Gate-drain Cgd capacitance causes significant Miller effect, forming the main pole that limits bandwidth.",
        cgAmplifier: "Common Gate (CG) Amplifier",
        cgAmplifierDesc: "Input at source, output at drain, gate grounded, no input-output capacitance, therefore no Miller effect, high-frequency characteristics superior to CS.",
        negativeFeedback: "Negative Feedback",
        feedbackMethod: "Feedback Method",
        feedbackMethodDesc: "Series input parallel output, increases input resistance, decreases output resistance.",
        positiveNegativeFeedback: "Positive and Negative Feedback Identification",
        feedbackAnalysis: "Analyze the effect of feedback signals on input to determine feedback type:",
        negativeFeedbackDesc: "Feedback signals counteract input changes, reducing effective input. Used to stabilize circuits.",
        positiveFeedbackDesc: "Feedback signals enhance input changes, increasing effective input. May cause oscillation.",
        logicTimingPower: "Logic, Timing & Power",
        logicalEffort: "Method of Logical Effort",
        logicalEffortDesc: "This is a simple method for calculating digital circuit delays. Its main advantage is breaking down complex delay problems into several simple parts for analysis.",
        delayFormula: "We use a formula to represent circuit delay: d = g⋅h + p",
        basicComponents: "Basic Components",
        logicalEffortG: "g (Logical Effort)",
        logicalEffortGDesc: "Represents delay caused by circuit type, such as inherent differences between NAND and NOR gates",
        electricalEffortH: "h (Electrical Effort)",
        electricalEffortHDesc: "Represents delay caused by load size, simply the ratio of output capacitance to input capacitance",
        parasiticDelayP: "p (Parasitic Delay)",
        parasiticDelayPDesc: "Represents inherent delay within the circuit, independent of load",
        importantConcepts: "Important Concepts",
        effortDelayF: "Effort Delay (f)",
        effortDelayFDesc: "This is delay caused by load, equal to the product of logical effort and electrical effort (f = g⋅h)",
        normalizedDelayD: "Normalized Delay (d)",
        normalizedDelayDDesc: "This is the total circuit delay, expressed in relative units. It equals effort delay plus parasitic delay (d = f + p)",
        propagationDelayTpd: "Propagation Delay (tpd)",
        propagationDelayTpdDesc: "To know actual delay time (in seconds), simply multiply normalized delay by a process-related time constant τ: tpd = d⋅τ",
        booleanAlgebra: "Boolean Algebra Three Laws Summary Table",
        absorptionLaw: "Absorption Law",
        absorptionLaw1: "A+AB=A",
        absorptionLaw1Desc: "If A already exists, there's no need to add terms containing A",
        absorptionLaw2: "A(A+B)=A",
        absorptionLaw2Desc: "A multiplied by expressions containing A still results in A",
        absorptionLaw3: "A+A′B=A+B",
        absorptionLaw3Desc: "Can be simplified to A+B (A′ represents NOT A)",
        switchingPower: "Switching Power",
        switchingPowerFormula: "Switching Power Formula",
        switchingPowerFormulaDesc: "Switching power is represented by the following formula:",
        formulaParameters: "Formula Parameters",
        switchingPowerPsw: "PSW: Switching Power, unit is watts (W).",
        activityFactor: "α: Activity Factor",
        activityFactorDesc: "Represents the probability of charge/discharge transitions occurring in each clock cycle, a dimensionless parameter between 0 and 1.",
        clockFrequency: "f: Clock Frequency, unit is hertz (Hz).",
        loadCapacitance: "CL: Load Capacitance, unit is farads (F).",
        supplyVoltage: "VDD: Supply Voltage, unit is volts (V).",
        logicCircuitTypes: "Various Logic Circuit Types",
        staticLogic: "Static Logic",
        staticLogicDesc: "The most basic logic circuit type. No clock signal control needed, maintains stable output through fixed pull-up and pull-down circuits.",
        passTransistorLogic: "Pass Transistor Logic",
        passTransistorLogicDesc: "Uses transistors as simple switches to pass signals. Simple structure, but there's some attenuation when transmitting high-level signals.",
        pseudoNmosLogic: "Pseudo-NMOS Logic",
        pseudoNmosLogicDesc: "A simplified version of static logic circuits. Uses a permanently conducting pull-up resistor, simple structure but consumes some static power.",
        ratioedLogic: "Ratioed Logic",
        ratioedLogicDesc: "Output depends on the size ratio of pull-up and pull-down transistors. Can be imagined as two transistors in a 'tug-of-war', whoever is stronger determines whether output is high or low.",
        dynamicLogic: "Dynamic Logic",
        dynamicLogicDesc: "Clock-controlled circuits. Operation in two phases: first precharge (charge output to high level), then decide whether to maintain high level or discharge to low level based on input signals.",
        dominoLogic: "Domino Logic",
        dominoLogicDesc: "Improved version of dynamic logic, adds a signal inverter at output for better series operation.",
        timingDelays: "Timing Delays",
        contaminationDelay: "Contamination Delay (tcd)",
        contaminationDelayDesc: "The shortest time for signal transmission. That is, when input changes, how quickly output will start to change.",
        propagationDelay: "Propagation Delay (tpd)",
        propagationDelayDesc: "The longest time for signal transmission. That is, when input changes, how slowly output will completely stabilize.",
        physicalDesign: "Physical Design & Verification",
        postLayoutSimulation: "Post-layout Simulation & Extraction",
        designFlow: "Design Flow",
        designFlowDesc: "Schematic Design → Layout Design → Extraction → Verification & Simulation",
        extraction: "Extraction",
        extractionDesc: "CAD tools automatically analyze layout, identify circuit components and connections, generate netlist. Need to identify vias to understand circuit connections.",
        parasitic: "Parasitic",
        parasiticDesc: "Actual layout produces parasitic resistance and parasitic capacitance, which are unavoidable.",
        accurateSimulation: "Accurate Simulation",
        preLayout: "Pre-layout",
        preLayoutDesc: "Based on ideal circuit diagram, fast but not precise.",
        postLayout: "Post-layout",
        postLayoutDesc: "Includes parasitic parameters, more accurate results, closer to actual chip performance.",
        coreLayoutTechniques: "Core Layout Techniques",
        guardRing: "Guard Ring",
        guardRingDesc: "Increases area, used to prevent latch-up effect.",
        hTreeSpine: "H-Tree or Spine",
        hTreeSpineDesc: "Used to reduce clock skew.",
        stripedMetalLayers: "Striped Metal Layers",
        stripedMetalLayersDesc: "Used to evenly distribute power, reduce IR drop.",
        increasedTrackWidth: "Increased Track Width",
        increasedTrackWidthDesc: "Used to reduce resistance or improve current carrying capacity.",
        foldedLayout: "Folded Layout",
        foldedLayoutDesc: "Significantly reduces cell area.",
        designForTestability: "Design for Testability",
        scanPath: "Scan Path (flip-flop)",
        staticCharacteristics: "Static Characteristics",
        staticCharacteristicsProblem: "Problem",
        staticCharacteristicsProblemDesc: "Latch leaks data when using transmission gates.",
        staticCharacteristicsSolution: "Solution",
        staticCharacteristicsSolutionDesc: "Add feedback circuit to maintain data stability.",
        edgeSensitivity: "Edge Sensitivity",
        edgeSensitivityProblem: "Problem",
        edgeSensitivityProblemDesc: "Ordinary latches don't update data precisely enough.",
        edgeSensitivitySolution: "Solution",
        edgeSensitivitySolutionDesc: "Use two-stage latch: High level: first stage receives data, second stage maintains; Falling edge: first stage locks data, second stage updates.",
        esdProtection: "ESD Protection",
        esdProtectionFunction: "Function",
        esdProtectionFunctionDesc: "Protects chip pin circuits.",
        esdProtectionWork: "Work Method",
        esdProtectionWorkDesc: "Use inverter at input D; Diodes conduct excessive current at high voltage.",
        setupTime: "Setup Time",
        setupTimeProblem: "Problem",
        setupTimeProblemDesc: "MUX selector makes flip-flop slower.",
        setupTimeSolution: "Solution",
        setupTimeSolutionDesc: "Integrate selection function into transmission gates to improve speed.",
        bedOfNailsTest: "Bed of Nails Test",
        bedOfNailsConcept: "Basic Concept",
        bedOfNailsConceptDesc: "This is a traditional testing method used to check if components on circuit boards are well soldered. Testing requires a device with many test pins that contact test points specially left on circuit boards.",
        bedOfNailsDisadvantages: "Disadvantages",
        bedOfNailsDisadvantagesDesc: "Modern chip packaging is increasingly dense (such as BGA packaging), making it difficult to test with this method, hence the need for new technologies like boundary scan.",
        boundaryScan: "Boundary Scan",
        boundaryScanDifficulty: "Testing Difficulty",
        boundaryScanDifficultyDesc: "Modern chips are getting smaller, making it difficult to test connections between chips with traditional methods.",
        boundaryScanSolution: "Solution",
        boundaryScanSolutionDesc: "Add a boundary scan cell next to each input/output pin of the chip. These cells are connected in a chain, like a test path around the chip core.",
        boundaryScanWork: "Work Method",
        boundaryScanWorkDesc: "We can check if chip pins work normally through a standard Test Access Port (TAP), without directly contacting the chip.",
        builtInSelfTest: "Built-In Self-Test (BIST)",
        bistMainIdea: "Main Idea",
        bistMainIdeaDesc: "Let the chip 'test itself', eliminating the need for expensive external test equipment.",
        bistMainParts: "Main Components",
        bistMainPartsDesc: "1. Test Signal Generator: Automatically generates test signals. 2. Result Analyzer: Converts test results into a simple digital signature.",
        bilboTechnology: "BILBO Technology",
        bilboTechnologyDesc: "BILBO technology is a special self-test module that integrates multiple test functions, capable of automatically completing tests and analyzing results.",
        generateQuiz: "Generate Quiz",
        closeQuiz: "Close Quiz",
        chapterSelfTest: "Chapter Self-Test",
        noQuizAvailable: "No quiz questions available for this chapter.",
        showAnswer: "Show Answer",
        refreshQuiz: "Refresh Quiz",
        goToDigital: "Go to Digital Electronics Chapter →",
        goToAnalogue: "← Return to Analogue Electronics Chapter",
        quizQuestions: "Quiz Questions"
    },
    zh: {
        sidebarHeader: "数字与模拟助教",
        mainTitle: "数字与模拟<br/>助教复习",
        languageBtn: "English",
        analogueElectronics: "模拟电子学",
        digitalElectronics: "数字电子学",
        mosfetOperatingStates: "MOSFET工作状态与输出电压摆幅",
        mosfetStates: "MOSFET有三种基本工作状态：",
        offState: "截止状态 - 像关掉的开关，无电流通过",
        linearState: "线性状态 - 像可调电阻，电流由栅极电压控制",
        saturationState: "饱和状态 - 像稳定电流源，提供固定电流",
        note: "注意",
        channelLengthModulation: "沟道长度调制效应",
        channelLengthDesc: "使漏极电压增加时电流略微上升。",
        outputVoltageSwing: "输出电压摆幅",
        outputVoltageDesc: "定义为放大器在所有晶体管保持饱和区工作时的最大电压范围：",
        upperLimit: "上限 (Vout,max)",
        upperLimitDesc: "由PMOS负载管进入三极管区限制，约为VDD−∣VOV,load∣",
        lowerLimit: "下限 (Vout,min)",
        lowerLimitDesc: "由NMOS对或尾电流源管进入三极管区限制，约为VOV,input+VOV,tail",
        basicPrinciples: "差分放大器基本原理",
        differentialMode: "差分模式 (A_dm)",
        differentialModeWork: "工作原理",
        differentialModeWorkDesc: "差分放大器的两个晶体管共用的源极点可以看作是'虚拟地'，这是因为电路是对称的。",
        simplifiedAnalysis: "简化分析方法",
        simplifiedAnalysisDesc: "我们可以只分析电路的一半，把它当作一个简单的共源放大器来理解，这样计算会更容易。",
        amplificationCapability: "放大能力",
        singleEndedOutput: "单端输出增益",
        singleEndedOutputDesc: "当我们只看一个输出端时，这叫做'单端输出增益'。",
        differentialOutput: "差分输出增益",
        differentialOutputDesc: "当我们看两个输出端的电压差时，这叫做'差分输出增益'。通常情况下，差分输出增益是单端输出增益的两倍。",
        commonMode: "共模 (A_cm)",
        commonModeWork: "工作原理",
        commonModeWorkDesc: "当两个输入端收到相同的信号时（共模信号），尾电流源的电阻起着重要作用。这个电阻会产生负反馈效应，帮助抑制共模信号。",
        suppressionEffect: "抑制效果",
        suppressionEffectDesc: "放大器会大大减弱共模信号，这正是我们想要的效果。",
        differentialOutputPerformance: "差分输出时的表现",
        differentialOutputPerformanceDesc: "当我们看两个输出端的差值时，理想情况下共模信号完全被消除（增益为零）。这是因为共模信号在两端产生完全相同的变化。",
        cmrr: "共模抑制比（CMRR）",
        cmrrMeaning: "含义",
        cmrrMeaningDesc: "CMRR用来衡量放大器的品质，它表示放大器对有用信号（差分信号）的放大能力与对干扰信号（共模信号）的抑制能力之比。",
        cmrrPerformance: "性能指标",
        cmrrPerformanceDesc: "CMRR越大说明性能越好。特别是在差分输出时，因为完全抑制了共模信号，理论上CMRR可以达到无限大。",
        keyTransistors: "放大器中两个关键晶体管的作用",
        m1Work: "M1的工作：信号放大器",
        m1WorkDesc: "M1负责接收并放大输入信号。它就像一个电压控制的开关，根据输入电压的变化来调节电流的大小。M1的跨导（gm1）决定了它能把多小的电压变化转换成多大的电流变化。",
        m3Work: "M3的工作：电流转换器",
        m3WorkDesc: "M3的任务是把M1产生的电流变化转换成电压变化。它的栅极电压是固定的，主要作用是提供一个很大的输出电阻。这个大电阻帮助我们获得更大的输出电压信号。",
        millerEffect: "密勒效应",
        millerEffectDesc: "反相放大器中的输入-输出间电容(如CS放大器的Cgd)在输入端等效为更大的电容Cin,Miller=Cf(1−Av)，因为Av为大负数。",
        inputPole: "输入极点",
        inputPoleDesc: "放大器频率响应受RC网络形成的极点限制，频率fp=1/(2πR_totalC_total)。",
        csAmplifier: "共源 (Common Source, CS) 放大器",
        csAmplifierDesc: "栅漏间Cgd电容造成显著密勒效应，形成主极点限制带宽。",
        cgAmplifier: "共栅 (Common Gate, CG) 放大器",
        cgAmplifierDesc: "输入源极，输出漏极，栅接地，无输入输出间电容，因此无密勒效应，高频特性优于CS。",
        negativeFeedback: "负反馈",
        feedbackMethod: "反馈方式",
        feedbackMethodDesc: "串联输入并联输出，提高输入电阻，降低输出电阻。",
        positiveNegativeFeedback: "正反馈与负反馈的识别",
        feedbackAnalysis: "通过分析反馈信号对输入的影响来判断反馈类型：",
        negativeFeedbackDesc: "反馈信号抵消输入变化，降低有效输入。用于稳定电路。",
        positiveFeedbackDesc: "反馈信号增强输入变化，提高有效输入。可能引起振荡。",
        logicTimingPower: "逻辑、时序与功耗",
        logicalEffort: "逻辑功方法论",
        logicalEffortDesc: "这是一种计算数字电路延迟的简单方法。它的主要优点是把复杂的延迟问题分解成几个简单的部分来分析。",
        delayFormula: "我们用一个公式来表示电路的延迟：d = g⋅h + p",
        basicComponents: "基本组成部分",
        logicalEffortG: "g（逻辑功）",
        logicalEffortGDesc: "表示电路类型造成的延迟，比如NAND门和NOR门的固有差异",
        electricalEffortH: "h（电气功）",
        electricalEffortHDesc: "表示负载大小造成的延迟，简单说就是输出端连接的电容与输入电容的比值",
        parasiticDelayP: "p（寄生延迟）",
        parasiticDelayPDesc: "表示电路内部固有的延迟，这部分延迟与负载无关",
        importantConcepts: "几个重要概念",
        effortDelayF: "门功（effort delay, f）",
        effortDelayFDesc: "这是由负载引起的延迟，等于逻辑功与电气功的乘积（f = g⋅h）",
        normalizedDelayD: "归一化延迟（Normalized Delay, d）",
        normalizedDelayDDesc: "这是电路的总延迟，用相对单位表示。它等于门功加上寄生延迟（d = f + p）",
        propagationDelayTpd: "实际延迟（propagation Delay, tpd）",
        propagationDelayTpdDesc: "如果要知道实际的延迟时间（以秒为单位），只需要把归一化延迟乘以一个与工艺相关的时间常数τ： tpd = d⋅τ",
        booleanAlgebra: "布尔代数三大定律总结表",
        absorptionLaw: "吸收律",
        absorptionLaw1: "A+AB=A",
        absorptionLaw1Desc: "如果已经有A，就不需要再加上包含A的项",
        absorptionLaw2: "A(A+B)=A",
        absorptionLaw2Desc: "A与包含A的式子相乘，结果还是A",
        absorptionLaw3: "A+A′B=A+B",
        absorptionLaw3Desc: "可以化简为A+B（A′表示非A）",
        switchingPower: "开关功耗",
        switchingPowerFormula: "开关功耗公式",
        switchingPowerFormulaDesc: "开关功耗由以下公式表示：",
        formulaParameters: "公式参数解释",
        switchingPowerPsw: "PSW：开关功耗 (Switching Power)，单位为瓦特 (W)。",
        activityFactor: "α：活动因子 (Activity Factor)",
        activityFactorDesc: "表示每个时钟周期内发生充/放电转换的概率，是一个取值在0到1之间的无量纲参数。",
        clockFrequency: "f：时钟频率 (Clock Frequency)，单位为赫兹 (Hz)。",
        loadCapacitance: "CL：负载电容 (Load Capacitance)，单位为法拉 (F)。",
        supplyVoltage: "VDD：电源电压 (Supply Voltage)，单位为伏特 (V)。",
        logicCircuitTypes: "各种逻辑电路类型",
        staticLogic: "静态逻辑 (Static Logic)",
        staticLogicDesc: "最基本的逻辑电路类型。不需要时钟信号控制，通过固定的上拉和下拉电路来保持输出稳定。",
        passTransistorLogic: "传输晶体管逻辑 (Pass Transistor Logic)",
        passTransistorLogicDesc: "使用晶体管作为简单的开关来传递信号。结构简单，但传输高电平信号时会有一定的衰减。",
        pseudoNmosLogic: "伪NMOS逻辑 (Pseudo-NMOS Logic)",
        pseudoNmosLogicDesc: "一种简化版的静态逻辑电路。使用一个永久导通的上拉电阻，结构简单但会消耗一些静态功耗。",
        ratioedLogic: "有比逻辑 (Ratioed Logic)",
        ratioedLogicDesc: "输出结果取决于上拉和下拉晶体管的尺寸比例。可以想象成两个晶体管在'拔河'，谁更强就决定了输出是高还是低。",
        dynamicLogic: "动态逻辑 (Dynamic Logic)",
        dynamicLogicDesc: "使用时钟信号控制的电路。工作分两个阶段：首先预充电（把输出充到高电平），然后根据输入信号决定是保持高电平还是放电到低电平。",
        dominoLogic: "多米诺逻辑 (Domino Logic)",
        dominoLogicDesc: "动态逻辑的改进版本，在输出端加了一个信号翻转器，使电路能更好地串联工作。",
        timingDelays: "时序延迟",
        contaminationDelay: "污染延迟 (Contamination Delay, tcd)",
        contaminationDelayDesc: "信号传输的最短时间。也就是说，当输入变化后，输出最快需要多长时间就会开始变化。",
        propagationDelay: "传输延迟 (Propagation Delay, tpd)",
        propagationDelayDesc: "信号传输的最长时间。即当输入变化后，输出最慢需要多长时间才能完全稳定下来。",
        physicalDesign: "物理设计与验证",
        postLayoutSimulation: "版图后仿真与提取",
        designFlow: "设计流程",
        designFlowDesc: "原理图设计 → 版图设计 → 提取 → 验证与仿真",
        extraction: "提取",
        extractionDesc: "CAD工具自动分析版图，识别电路元件和连接，生成网表。需要识别过孔来理解电路连接。",
        parasitic: "寄生参数",
        parasiticDesc: "实际版图中会产生寄生电阻和寄生电容，这些是不可避免的。",
        accurateSimulation: "精确仿真",
        preLayout: "版图前",
        preLayoutDesc: "基于理想电路图，快速但不精确。",
        postLayout: "版图后",
        postLayoutDesc: "包含寄生参数，结果更精确，更接近实际芯片性能。",
        coreLayoutTechniques: "核心版图技术",
        guardRing: "保护环 (Guard Ring)",
        guardRingDesc: "增加面积，用于防止闩锁效应。",
        hTreeSpine: "H树或骨干网络 (H-Tree or Spine)",
        hTreeSpineDesc: "用于减小时钟偏移。",
        stripedMetalLayers: "条带状金属层 (Striped Metal Layers)",
        stripedMetalLayersDesc: "用于均匀分布电源，减小IR压降。",
        increasedTrackWidth: "增加走线宽度 (Increased Track Width)",
        increasedTrackWidthDesc: "用于降低电阻或提高载流能力。",
        foldedLayout: "折叠式版图 (Folded Layout)",
        foldedLayoutDesc: "显著减小单元面积。",
        designForTestability: "可测试性设计",
        scanPath: "扫描路径 (Scan Path flip-flop)",
        staticCharacteristics: "实现静态特性",
        staticCharacteristicsProblem: "问题",
        staticCharacteristicsProblemDesc: "锁存器用传输门时会漏数据。",
        staticCharacteristicsSolution: "解决办法",
        staticCharacteristicsSolutionDesc: "加入反馈电路保持数据稳定。",
        edgeSensitivity: "实现边沿触发",
        edgeSensitivityProblem: "问题",
        edgeSensitivityProblemDesc: "普通锁存器数据更新不够精确。",
        edgeSensitivitySolution: "解决办法",
        edgeSensitivitySolutionDesc: "用两级锁存器：高电平时：第一级收数据，第二级保持；下降沿时：第一级锁数据，第二级更新。",
        esdProtection: "防止电压冲击 (ESD Protection)",
        esdProtectionFunction: "功能",
        esdProtectionFunctionDesc: "保护芯片引脚的电路。",
        esdProtectionWork: "工作方式",
        esdProtectionWorkDesc: "在输入D处使用inverter；高压时二极管导走过大电流。",
        setupTime: "提高工作速度 (减少建立时间)",
        setupTimeProblem: "问题",
        setupTimeProblemDesc: "MUX选择器使触发器变慢。",
        setupTimeSolution: "改进方法",
        setupTimeSolutionDesc: "选择功能集成到传输门中提高速度。",
        bedOfNailsTest: "针床式测试",
        bedOfNailsConcept: "基本概念",
        bedOfNailsConceptDesc: "这是一种传统的测试方法，用来检查电路板上的元件是否焊接良好。测试时要用到一个带有很多测试针的装置，这些针会接触电路板上专门留出的测试点。",
        bedOfNailsDisadvantages: "缺点",
        bedOfNailsDisadvantagesDesc: "现在的芯片封装越来越密集（比如BGA封装），已经很难用这种方法测试了，所以才需要用边界扫描这样的新技术。",
        boundaryScan: "边界扫描",
        boundaryScanDifficulty: "测试难点",
        boundaryScanDifficultyDesc: "现代芯片越做越小，用传统方法很难测试芯片之间的连接是否正常。",
        boundaryScanSolution: "解决方法",
        boundaryScanSolutionDesc: "在芯片的每个输入输出引脚旁边都加一个边界扫描单元。这些单元串成一条链，像一条绕着芯片核心的测试通路。",
        boundaryScanWork: "工作方式",
        boundaryScanWorkDesc: "我们通过一个标准的测试接口就能检查芯片引脚是否工作正常，不需要直接接触芯片。",
        builtInSelfTest: "芯片自测试",
        bistMainIdea: "主要实现",
        bistMainIdeaDesc: "让芯片能够'自己测试自己'，这样就不需要太多昂贵的外部测试设备。",
        bistMainParts: "主要部分",
        bistMainPartsDesc: "1. 测试信号发生器：自动产生测试用的信号。2. 结果分析器：把测试结果转换成一个简单的数字特征码。",
        bilboTechnology: "BILBO技术",
        bilboTechnologyDesc: "BILBO技术是一种特殊的自测试模块，它把多种测试功能集成在一起，能够自动完成测试并分析结果。",
        generateQuiz: "生成测验",
        closeQuiz: "关闭测验",
        chapterSelfTest: "本章自测",
        noQuizAvailable: "本章暂无测验题目。",
        showAnswer: "显示答案",
        refreshQuiz: "刷新测验",
        goToDigital: "进入 Digital Electronics 章节 →",
        goToAnalogue: "← 返回 Analogue Electronics 章节",
        quizQuestions: "测验题目"
    }
}; 